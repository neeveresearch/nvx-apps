<?xml version="1.0"?>
<model xmlns="http://www.neeveresearch.com/schema/x-ddl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <env>
    <nv>
      <!-- optimize for latency -->
      <optimizefor>latency</optimizefor>
      <aep.trace>info</aep.trace>

      <!-- global latency stats settings -->
      <msg.latency.stats>true</msg.latency.stats>
      <ods.latency.stats>true</ods.latency.stats>
      <latencymanager.samplesize>10240</latencymanager.samplesize>
    </nv>

    <!-- Configure the test drivers -->
    <driver.sendRate>1000</driver.sendRate>
    <driver.sendCount>1000</driver.sendCount>

    <cardmaster.numShards>1</cardmaster.numShards>
    <merchantmaster.numShards>1</merchantmaster.numShards>
    <cardholdermaster.numShards>1</cardholdermaster.numShards>
    <fraudanalyzer.numShards>1</fraudanalyzer.numShards>
  </env>

  <buses>
    <bus name="ccfd"
      descriptor="${CCFD_BUS_DESCRIPTOR::solace://192.168.1.9:55555&amp;use_default_queue_name=true&amp;SESSION_VPN_NAME=default&amp;SESSION_USERNAME=test&amp;usejni=false&amp;FLOW_FORWARDING_MODE=2}">
      <channels>
        <channel name="authreq" id="1">
          <qos>${CCFD_QOS::Guaranteed}</qos>
          <key>${cardMasterShardId}</key>
        </channel>
        <channel name="authreq2" id="2">
          <qos>${CCFD_QOS::Guaranteed}</qos>
          <key>${merchantMasterShardId}</key>
        </channel>
        <channel name="authreq3" id="3">
          <qos>${CCFD_QOS::Guaranteed}</qos>
          <key>${cardholderMasterShardId}</key>
        </channel>
        <channel name="authreq4" id="4">
          <qos>${CCFD_QOS::Guaranteed}</qos>
          <key>${fraudanalyzerShardId}</key>
        </channel>
        <channel name="authresp" id="5">
          <qos>${CCFD_QOS::Guaranteed}</qos>
          <key>${cardholderMasterShardId}/${cardMasterShardId}</key>
        </channel>
        <channel name="card-events" id="6">
          <qos>${CCFD_QOS::Guaranteed}</qos>
          <key>${cardMasterShardId}</key>
        </channel>
        <channel name="cardholder-events" id="7">
          <qos>${CCFD_QOS::Guaranteed}</qos>
          <key>${cardholderMasterShardId}</key>
        </channel>
        <channel name="merchant-events" id="8">
          <qos>${CCFD_QOS::Guaranteed}</qos>
          <key>${merchantMasterShardId}</key>
        </channel>
      </channels>

    </bus>
  </buses>

  <apps>
    <app name="fraudanalyzer-send-driver" displayName="Fraud Analyzer Send Driver" mainClass="com.neeve.ccfd.fraudanalyzer.driver.SendDriver">
      <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
      <messaging>
        <factories>
          <factory name="com.neeve.ccfd.messages.MessageFactory" />
        </factories>
        <bus name="ccfd">
          <channels>
            <channel name="authreq4" join="false" />
          </channels>
        </bus>
      </messaging>
    </app>

    <app name="fraudanalyzer" displayName="Fraud Analyzer" mainClass="com.neeve.ccfd.fraudanalyzer.Application">
      <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
      <messaging>
        <factories>
          <factory name="com.neeve.ccfd.messages.MessageFactory" />
        </factories>
        <bus name="ccfd">
          <channels>
            <channel name="authreq4" join="true">
              <filter>fraudanalyzerShardId=${FRAUDANALYZER_SHARDID::0}</filter>
            </channel>
            <channel name="authresp" join="false" />
          </channels>
        </bus>
      </messaging>
      <storage>
        <factories>
          <factory name="com.neeve.ccfd.fraudanalyzer.state.StateFactory" />
        </factories>
        <clustering enabled="true">
          <localIfAddr>${FRAUDANALYZER_STORE_ADDRESS::0.0.0.0}</localIfAddr>
        </clustering>
        <persistence enabled="true">
          <!-- detached persist is not supported for state replication -->
          <detachedPersist enabled="false" />
        </persistence>
      </storage>
      <inboundEventAcknowledgementPolicy>OnStoreStability</inboundEventAcknowledgementPolicy>
    </app>

    <app name="fraudanalyzer-receive-driver" displayName="Fraud Analyzer Receive Driver" mainClass="com.neeve.ccfd.fraudanalyzer.driver.ReceiveDriver">
      <captureTransactionLatencyStats>true</captureTransactionLatencyStats>
      <messaging>
        <factories>
          <factory name="com.neeve.ccfd.messages.MessageFactory" />
        </factories>
        <bus name="ccfd">
          <channels>
            <channel name="authresp" join="true" />
          </channels>
        </bus>
      </messaging>
      <storage enabled="false">
        <clustering enabled="false" />
        <persistence enabled="false" />
      </storage>
    </app>
  </apps>

  <xvms>
    <templates>
      <xvm name="xvm-template">
        <heartbeats enabled="true" interval="10">
          <collectIndividualThreadStats>false</collectIndividualThreadStats>
          <tracing enabled="true">
            <traceAdminClientStats>false</traceAdminClientStats>
            <traceAppStats>false</traceAppStats>
            <tracePoolStats>false</tracePoolStats>
            <traceSysStats>false</traceSysStats>
            <traceThreadStats>false</traceThreadStats>
            <traceUserStats>true</traceUserStats>
          </tracing>
        </heartbeats>
      </xvm>
    </templates>
    
    <xvm name="fraudanalyzer-1" displayName="Fraud Analyzer Primary" template="xvm-template">
      <apps>
        <app name="fraudanalyzer" autoStart="true" />
      </apps>
    </xvm>
    
    <xvm name="fraudanalyzer-2" displayName="Fraud Analyzer Backup" template="xvm-template">
      <apps>
        <app name="fraudanalyzer" autoStart="true" />
      </apps>
    </xvm>

    <xvm name="fraudanalyzer-send-driver" displayName="Fraud Analyzer Send Driver" template="xvm-template">
      <apps>
        <app name="fraudanalyzer-send-driver" autoStart="true" />
      </apps>
    </xvm>
    
    <xvm name="fraudanalyzer-receive-driver" displayName="Fraud Analyzer Receive Driver" template="xvm-template">
      <apps>
        <app name="fraudanalyzer-receive-driver" autoStart="true" />
      </apps>
    </xvm>
  </xvms>

  <profiles>
    <profile name="neeve-lab">
      <xvms>
        <templates>
          <xvm name="xvm-template">
            <provisioning>
              <rootDirectory>/root/work/lumino</rootDirectory>
              <jvm>
                <javaHome>/usr/java/jdk1.8.0_60</javaHome>
                <jvmParamSets>
                  <jvmParamSet name="prefer-ipv4">
                    <jvmParams>-Djava.net.preferIPv4Stack=true </jvmParams>
                  </jvmParamSet>
                  <jvmParamSet name="verbose-gc">
                    <jvmParams>
                      -XX:+PrintGCDetails 
                      -XX:+PrintGCTimeStamps 
                      -XX:+PrintTenuringDistribution 
                      </jvmParams>
                  </jvmParamSet>
                  <jvmParamSet name="flight-recorder">
                    <jvmParams>
                      -XX:+UnlockCommercialFeatures 
                      -XX:+FlightRecorder 
                      -XX:StartFlightRecording=name=CardholderMaster11Recording,settings=profile 
                      -XX:FlightRecorderOptions=defaultrecording=true,dumponexit=true,dumponexitpath=${targetXvm::flight}-recording.jfr
                      </jvmParams>
                  </jvmParamSet>
                </jvmParamSets>
              </jvm>
            </provisioning>
          </xvm>
        </templates>

        <xvm name="fraudanalyzer-send-driver" template="xvm-template">
          <provisioning>
            <host>192.168.1.12</host>
            <jvm>
              <jvmParams>
                -Xms4g -Xmx4g -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=6 -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Xnoclassgc -XX:MaxTenuringThreshold=2
              </jvmParams>
            </jvm>
          </provisioning>
        </xvm>

        <xvm name="fraudanalyzer-receive-driver" template="xvm-template">
          <provisioning>
            <host>192.168.1.12</host>
            <jvm>
              <jvmParams>
                -Xms4g -Xmx4g -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=6 -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Xnoclassgc -XX:MaxTenuringThreshold=2
              </jvmParams>
            </jvm>
          </provisioning>
        </xvm>

        <xvm name="fraudanalyzer-1" template="xvm-template">
          <env>
            <CARDMASTER_STORE_ADDRESS>192.168.2.13</CARDMASTER_STORE_ADDRESS>
          </env>
          <provisioning>
            <host>192.168.1.13</host>
            <jvm>
              <jvmParams>
                -Xms4g -Xmx4g -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=6 -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Xnoclassgc -XX:MaxTenuringThreshold=2
              </jvmParams>
            </jvm>
          </provisioning>
        </xvm>

        <xvm name="fraudanalyzer-2" template="xvm-template">
          <env>
            <CARDMASTER_STORE_ADDRESS>192.168.2.14</CARDMASTER_STORE_ADDRESS>
          </env>
          <provisioning>
            <host>192.168.1.14</host>
            <jvm>
              <jvmParams>
                -Xms4g -Xmx4g -XX:NewSize=1536m -XX:MaxNewSize=1536m -XX:SurvivorRatio=6 -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Xnoclassgc -XX:MaxTenuringThreshold=2
              </jvmParams>
            </jvm>
          </provisioning>
        </xvm>
      </xvms>
    </profile>
      
    <profile name="solace-messaging">
      <activation>
        <properties>
          <ccfd-bus-provider>solace</ccfd-bus-provider>
        </properties>
      </activation>
      <env>
        <CCFD_BUS_DESCRIPTOR>solace://192.168.1.9:55555&amp;use_default_queue_name=true&amp;SESSION_VPN_NAME=default&amp;SESSION_USERNAME=test&amp;usejni=true&amp;FLOW_FORWARDING_MODE=2</CCFD_BUS_DESCRIPTOR>
      </env>
    </profile>
  </profiles>
</model>
